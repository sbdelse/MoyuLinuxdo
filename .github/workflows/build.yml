name: Build and Publish

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - architecture: x64
            platform: linux
            rid: linux-x64
          - architecture: x64
            platform: windows
            rid: win-x64
          - architecture: x64
            platform: macos
            rid: osx-x64
          - architecture: arm64
            platform: linux
            rid: linux-arm64
          - architecture: arm64
            platform: windows
            rid: win-arm64
          - architecture: arm64
            platform: macos
            rid: osx-arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get version
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        else
          echo "version=$(date +'%Y.%m.%d')-dev" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0'

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Install dependencies
      run: dotnet restore

    # 设置 QEMU 和 Docker，支持多架构构建
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    # 启用交叉编译
    - name: Setup cross-compilation
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
        
    # 修改构建步骤，添加交叉编译支持
    - name: Build Self-Contained
      run: |
        if [[ "${{ matrix.rid }}" == *"arm64"* ]]; then
          export CppCompilerAndLinker=aarch64-linux-gnu-g++
        fi
        dotnet publish -c Release -r ${{ matrix.rid }} --self-contained true \
          -p:PublishSingleFile=true -p:PublishTrimmed=true \
          -p:EnableCompressionInSingleFile=true \
          -p:Version=${{ steps.version.outputs.version }} \
          -o ./output/self-contained/${{ matrix.rid }}

    - name: Build Framework-Dependent
      run: |
        if [[ "${{ matrix.rid }}" == *"arm64"* ]]; then
          export CppCompilerAndLinker=aarch64-linux-gnu-g++
        fi
        dotnet publish -c Release -r ${{ matrix.rid }} --self-contained false \
          -p:Version=${{ steps.version.outputs.version }} \
          -o ./output/framework-dependent/${{ matrix.rid }}

    - name: Install 7-Zip
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: choco install 7zip.portable -y

    - name: Prepare and Compress Artifacts
      shell: bash
      run: |
        # Create directories for both versions
        mkdir -p release/self-contained release/framework-dependent

        # Prepare self-contained version
        cp -r output/self-contained/${{ matrix.rid }}/* release/self-contained/
        cd release/self-contained
        if [[ "${{ matrix.platform }}" == "windows" ]]; then
          mv MoyuLinuxdo.exe MoyuLinuxdo_${{ matrix.platform }}_${{ matrix.architecture }}_${{ steps.version.outputs.version }}_self-contained.exe
          7z a -t7z -m0=lzma2 -mx=9 -mfb=64 -md=32m -ms=on ../../MoyuLinuxdo_${{ matrix.platform }}_${{ matrix.architecture }}_${{ steps.version.outputs.version }}_self-contained.7z *
        else
          mv MoyuLinuxdo MoyuLinuxdo_${{ matrix.platform }}_${{ matrix.architecture }}_${{ steps.version.outputs.version }}_self-contained
          7z a -t7z -m0=lzma2 -mx=9 -mfb=64 -md=32m -ms=on ../../MoyuLinuxdo_${{ matrix.platform }}_${{ matrix.architecture }}_${{ steps.version.outputs.version }}_self-contained.7z *
        fi
        cd ../..

        # Prepare framework-dependent version
        cp -r output/framework-dependent/${{ matrix.rid }}/* release/framework-dependent/
        cd release/framework-dependent
        if [[ "${{ matrix.platform }}" == "windows" ]]; then
          mv MoyuLinuxdo.exe MoyuLinuxdo_${{ matrix.platform }}_${{ matrix.architecture }}_${{ steps.version.outputs.version }}_framework-dependent.exe
          7z a -t7z -m0=lzma2 -mx=9 -mfb=64 -md=32m -ms=on ../../MoyuLinuxdo_${{ matrix.platform }}_${{ matrix.architecture }}_${{ steps.version.outputs.version }}_framework-dependent.7z *
        else
          mv MoyuLinuxdo MoyuLinuxdo_${{ matrix.platform }}_${{ matrix.architecture }}_${{ steps.version.outputs.version }}_framework-dependent
          7z a -t7z -m0=lzma2 -mx=9 -mfb=64 -md=32m -ms=on ../../MoyuLinuxdo_${{ matrix.platform }}_${{ matrix.architecture }}_${{ steps.version.outputs.version }}_framework-dependent.7z *
        fi
        cd ../..

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: MoyuLinuxdo_${{ matrix.platform }}_${{ matrix.architecture }}
        path: MoyuLinuxdo_${{ matrix.platform }}_${{ matrix.architecture }}_${{ steps.version.outputs.version }}*.7z
        if-no-files-found: error

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          */MoyuLinuxdo_*.7z
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}