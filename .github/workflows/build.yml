name: Build and Publish

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            architecture: x64
            platform: linux
            rid: linux-x64
          - os: windows-latest
            architecture: x64
            platform: windows
            rid: win-x64
          - os: macos-latest
            architecture: x64
            platform: macos
            rid: osx-x64
          - os: ubuntu-latest
            architecture: arm64
            platform: linux
            rid: linux-arm64
          - os: windows-latest
            architecture: arm64
            platform: windows
            rid: win-arm64
          - os: macos-latest
            architecture: arm64
            platform: macos
            rid: osx-arm64
          - os: ubuntu-latest
            architecture: x86
            platform: linux
            rid: linux-x86
          - os: windows-latest
            architecture: x86
            platform: windows
            rid: win-x86
          - os: ubuntu-latest
            architecture: arm
            platform: linux
            rid: linux-arm
          - os: windows-latest
            architecture: arm
            platform: windows
            rid: win-arm

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get version
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        else
          echo "version=$(date +'%Y.%m.%d')-dev" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0'

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Install dependencies
      run: dotnet restore

    # Build self-contained version
    - name: Build Self-Contained
      shell: bash
      run: dotnet publish -c Release -r ${{ matrix.rid }} --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true -p:EnableCompressionInSingleFile=true -p:Version=${{ steps.version.outputs.version }}

    # Build framework-dependent version
    - name: Build Framework-Dependent
      shell: bash
      run: dotnet publish -c Release -r ${{ matrix.rid }} --self-contained false -p:PublishSingleFile=true -p:Version=${{ steps.version.outputs.version }}

    - name: Prepare artifacts
      shell: bash
      run: |
        # Prepare self-contained version
        cd bin/Release/net8.0/${{ matrix.rid }}/publish/
        if [[ "${{ matrix.platform }}" == "windows" ]]; then
          mv MoyuLinuxdo.exe MoyuLinuxdo_${{ matrix.platform }}_${{ matrix.architecture }}_${{ steps.version.outputs.version }}_self-contained.exe
        else
          mv MoyuLinuxdo MoyuLinuxdo_${{ matrix.platform }}_${{ matrix.architecture }}_${{ steps.version.outputs.version }}_self-contained
        fi
        cd -

        # Prepare framework-dependent version
        cd bin/Release/net8.0/${{ matrix.rid }}/publish/
        if [[ "${{ matrix.platform }}" == "windows" ]]; then
          mv MoyuLinuxdo.exe MoyuLinuxdo_${{ matrix.platform }}_${{ matrix.architecture }}_${{ steps.version.outputs.version }}_framework-dependent.exe
        else
          mv MoyuLinuxdo MoyuLinuxdo_${{ matrix.platform }}_${{ matrix.architecture }}_${{ steps.version.outputs.version }}_framework-dependent
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: MoyuLinuxdo_${{ matrix.platform }}_${{ matrix.architecture }}
        path: |
          bin/Release/net8.0/${{ matrix.rid }}/publish/MoyuLinuxdo_*
        if-no-files-found: error

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          */MoyuLinuxdo_*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}